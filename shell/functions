# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

# All the dig info
function digga() {
    dig +nocmd "$1" any +multiline +noall +answer
}

# Remove host from known_hosts 
function removehost() {
    ssh-keygen -R "$1"
}

function microtime() {
    gdate +"%Y-%m-%d %H:%M:%S,%5N"
}

# Run artisan
function artisan() {
    php artisan "$@"
}

# Fix permissions of QuickLook plugins
function fixQL() {
    xattr -r -d com.apple.quarantine ~/Library/QuickLook/QL*
}

# Update zsh completions for kubeone
function kubeone_completion() {
    kubeone completion zsh > $ZSH/completions/_kubeone
}

# Update zsh completions for talosctl
function talosctl_completion() {
    talosctl completion zsh > $ZSH/completions/_talosctl
}

# Update zsh completions
function update_completions() {
    mkdir -p $ZSH/completions
    kubeone_completion
    talosctl_completion
}

# Create dmg file of folder
function dmg() {
    hdiutil create -skipunreadable -fs APFS -format UDRO -srcfolder "$1" -volname "$2" "$2.dmg"
}

# List open media
function lsom() {
    lsof -p $(ps aux | grep -i "$1" | grep -v grep | awk '{print $2}') | grep "\.$2" | grep -Eo "/.*" | xargs
}

function spaces_to_x() {
    for f in *\ *; do mv "$f" "${f// /$1}"; done 
}

function x_to_spaces() {
    for f in *$1*; do mv "$f" "${f//$1/ }"; done 
}

function dedup_lines() {
    sort $1 -u -o $1
}

function ds_delete() {
    find . -name ".DS_Store" -delete
}

# zmk_build <build-dir> <board> <shield>
# zmk_build "build/left" "nice_nano_v2" "corne_left nice_view_adapter nice_view"
function zmk_build() {
    west build --pristine --source-dir "$ZMK_PATH/app" --build-dir "$1" --board "$2" -- -DZMK_CONFIG="$ZMK_CONFIG_PATH/config" -DSHIELD="$3"
}

# Print the full command before running kubectl
# function kubectl() { 
#     echo "+ kubectl $@">&2; command kubectl $@;
# }