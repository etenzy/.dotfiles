# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

# All the dig info
function digga() {
    dig +nocmd "$1" any +multiline +noall +answer
}

function microtime() {
    gdate +"%Y-%m-%d %H:%M:%S,%5N"
}

# Run artisan
function artisan() {
    php artisan "$@"
}

# List open media
function lsom() {
    lsof -p $(ps aux | grep -i "$1" | grep -v grep | awk '{print $2}') | grep "\.$2" | grep -Eo "/.*" | xargs
}

function spaces_to_x() {
    for f in *\ *; do mv "$f" "${f// /$1}"; done 
}

function x_to_spaces() {
    for f in *$1*; do mv "$f" "${f//$1/ }"; done 
}

function dedup_lines() {
    sort $1 -u -o $1
}

function remove_empty_lines() {
    sed -r '/^\s*$/d' $1
}

function ds_delete() {
    find . -name ".DS_Store" -delete
}

function files_larger_than() {
    find $(pwd) -type f -size +$1 -exec ls -lh {} \; | awk '{print $5 " " $9}' | sort -h
}

function sed_regex() {
    sed -E 's/'"$1"'/'"$2"'/g' $3
}

function only_email_pass() {   
    grep -Eo '^[[:print:]]+\@([[:alnum:]]+\.)+[[:alnum:]]{2,}\:[[:graph:]]+' $1
}

function search() {
    grep -rni "${2:-$(pwd)}" -e $1
}

function respring() {
    for app in "Dock" "Finder" "System Settings" "SizeUp" "SystemUIServer" "cfprefsd"; do
	    killall "${app}" > /dev/null 2>&1
    done
}

function ts() {
    if [ -z "$IS_GNUDATE" ]; then
        if DATE_TEST=$(date --version 2>/dev/null); then
            IS_GNUDATE=true;
        else
            IS_GNUDATE=false;
        fi
    fi

    if [ -t 0 ]; then
        if [ -z "$1" ]; then
            date "+%s"
        else
            if [ $IS_GNUDATE = true ]; then
                date -d "$1" "+%s"
            else
                date -j -f "%a %b %d %T %Z %Y" "$1" "+%s"
            fi
        fi
    else
        while IFS= read -r line; do
            if [ $IS_GNUDATE = true ]; then
                date -d "$line" "+%s"
            else
                date -j -f "%a %b %d %T %Z %Y" "$line" "+%s"
            fi
        done
    fi
}

function ts2date() {
    if [ -z "$IS_GNUDATE" ]; then
        if DATE_TEST=$(date --version 2>/dev/null); then
            IS_GNUDATE=true;
        else
            IS_GNUDATE=false;
        fi
    fi

    if [ -t 0 ]; then
        if [ $IS_GNUDATE = true ]; then
            date -d @$1
        else
            date -r $1
        fi
    else
        while IFS= read -r line; do
            if [ $IS_GNUDATE = true ]; then
                date -d @$line
            else
                date -r $line
            fi
        done
    fi
}

function datetime() {
    if [ -z "$IS_GNUDATE" ]; then
        if DATE_TEST=$(date --version 2>/dev/null); then
            IS_GNUDATE=true;
        else
            IS_GNUDATE=false;
        fi
    fi

    if [ -t 0 ]; then
        if [ -z "$1" ]; then
            date "+%Y-%m-%d %T"
        else
            if [ $IS_GNUDATE = true ]; then
                date -d "$1" "+%Y-%m-%d %T"
            else
                date -j -f "%a %b %d %T %Z %Y" "$1" "+%Y-%m-%d %T"
            fi
        fi
    else
        while IFS= read -r line; do
            if [ $IS_GNUDATE = true ]; then
                date -d "$line" "+%Y-%m-%d %T"
            else
                date -j -f "%a %b %d %T %Z %Y" "$line" "+%Y-%m-%d %T"
            fi
        done
    fi
}

function datetime2date() {
    if [ -z "$IS_GNUDATE" ]; then
        if DATE_TEST=$(date --version 2>/dev/null); then
            IS_GNUDATE=true;
        else
            IS_GNUDATE=false;
        fi
    fi

    if [ -t 0 ]; then
         if [ $IS_GNUDATE = true ]; then
            date -d "$1"
        else
            date -j -f "%Y-%m-%d %H:%M:%S" "$1"
        fi
    else
        while IFS= read -r line; do
            if [ $IS_GNUDATE = true ]; then
                date -d "$line"
            else
                date -j -f "%Y-%m-%d %H:%M:%S" "$line"
            fi
        done
    fi
}

# zmk_build <build-dir> <board> <shield>
# zmk_build "build/left" "nice_nano_v2" "corne_left nice_view_adapter nice_view"
function zmk_build() {
    west build --pristine --source-dir "$ZMK_PATH/app" --build-dir "build/left" --board "nice_nano_v2" -- -DZMK_CONFIG="$ZMK_CONFIG_PATH/config" -DSHIELD="corne_left nice_view_adapter nice_view"
    west build --pristine --source-dir "$ZMK_PATH/app" --build-dir "build/right" --board "nice_nano_v2" -- -DZMK_CONFIG="$ZMK_CONFIG_PATH/config" -DSHIELD="corne_right nice_view_adapter nice_view"
}

# Print the full command before running kubectl
# function kubectl() { 
#     echo "+ kubectl $@">&2; command kubectl $@;
# }

function developer() {
    cd $HOME/Developer/$1
}

compctl -W $HOME/Developer/ -/ developer