Â #!/usr/bin/env bash

# Change dir to HOME
cd $HOME

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

if [ "$(uname -m)" = "arm64" ]; then
    echo ''
    echo 'Install rosetta'
    echo '----------------'
    /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    sudo mkdir /usr/local/bin
fi

echo ''
echo 'Install homebrew'
echo '----------------'
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

eval $(/opt/homebrew/bin/brew shellenv)

mkdir -p $HOME/.ca-certificates
mkdir -p $HOME/.homebrew-env

# homebrew-cask-upgrade
# brew cu shows all cask with their status
# brew cu --all Force upgrade outdated apps
brew tap buo/cask-upgrade

brew update

if [[ "$ENABLE_INSTALL_SHELL" == "true" ]]; then
    source $HOME/.dotfiles/install/shell.sh
fi

if [[ "$ENABLE_INSTALL_CLI" == "true" ]]; then
    source $HOME/.dotfiles/install/cli.sh
fi

if [[ "$ENABLE_INSTALL_GIT" == "true" ]]; then
    source $HOME/.dotfiles/install/git.sh
fi

if [[ "$ENABLE_INSTALL_SVN" == "true" ]]; then
    source $HOME/.dotfiles/install/svn.sh
fi

if [[ "$ENABLE_INSTALL_VIM" == "true" ]]; then
    source $HOME/.dotfiles/install/vim.sh
fi

if [[ "$ENABLE_INSTALL_GO" == "true" ]]; then
    source $HOME/.dotfiles/install/go.sh
fi

if [[ "$ENABLE_INSTALL_RUST" == "true" ]]; then
    source $HOME/.dotfiles/install/rust.sh
fi

if [[ "$ENABLE_INSTALL_PHP" == "true" ]]; then
    source $HOME/.dotfiles/install/php.sh
fi

if [[ "$ENABLE_INSTALL_NODE" == "true" ]]; then
    source $HOME/.dotfiles/install/node.sh
fi

if [[ "$ENABLE_INSTALL_YAML" == "true" ]]; then
    source $HOME/.dotfiles/install/yaml.sh
fi

if [[ "$ENABLE_INSTALL_VIRTUALISATION" == "true" ]]; then
    source $HOME/.dotfiles/install/gui.sh
fi

if [[ "$ENABLE_INSTALL_CONTAINER" == "true" ]]; then
    source $HOME/.dotfiles/install/container.sh
fi

if [[ "$ENABLE_INSTALL_CLOUD" == "true" ]]; then
    source $HOME/.dotfiles/install/cloud.sh
fi

if [[ "$ENABLE_INSTALL_KUBERNETES" == "true" ]]; then
    source $HOME/.dotfiles/install/kubernetes.sh
fi

if [[ "$ENABLE_INSTALL_GUI" == "true" ]]; then
    source $HOME/.dotfiles/install/gui.sh
fi

if [[ "$ENABLE_INSTALL_DATABASE" == "true" ]]; then
    source $HOME/.dotfiles/install/database.sh
fi

if [[ "$ENABLE_INSTALL_MEDIA" == "true" ]]; then
    source $HOME/.dotfiles/install/media.sh
fi

if [[ "$ENABLE_INSTALL_BROWSER" == "true" ]]; then
    source $HOME/.dotfiles/install/browser.sh
fi

if [[ "$ENABLE_INSTALL_MESSENGER" == "true" ]]; then
    source $HOME/.dotfiles/install/messenger.sh
fi

if [[ "$ENABLE_INSTALL_EDITOR" == "true" ]]; then
    source $HOME/.dotfiles/install/editor.sh
fi

if [[ "$ENABLE_INSTALL_MAS" == "true" ]]; then
    source $HOME/.dotfiles/install/mas.sh
fi

if [[ "$ENABLE_INSTALL_QUICKLOOk" == "true" ]]; then
    source $HOME/.dotfiles/install/quicklook.sh
fi

if [[ "$ENABLE_INSTALL_FONT" == "true" ]]; then
    source $HOME/.dotfiles/install/font.sh
fi

if [[ "$ENABLE_INSTALL_MACKUP" == "true" ]]; then
    echo ''
    echo 'Install Mackup'
    echo '--------------'
    brew install mackup
    rm $HOME/.mackup.cfg
    ln -s $HOME/.dotfiles/macos/mackup.cfg $HOME/.mackup.cfg

    if [ -d "$HOME/Dropbox/Mackup/" ]; then
        mackup restore --force
    fi
fi

echo ''
echo ''
echo '+++++++++++++++++++++++++++++++'
echo '+          All done!          +'
echo '+++++++++++++++++++++++++++++++'
echo ''
echo ''
echo 'Some optional tidbits'

chmod +x $HOME/.dotfiles/macos/set-defaults.sh
chmod +x $HOME/.dotfiles/macos/unset-defaults.sh
echo '1. Set some sensible macos defaults by running: $HOME/.dotfiles/macos/set-defaults.sh'
echo '2. Make a .dotfiles-custom/shell/.aliases for your custom commands'
echo '3. Download themes from nordtheme.com for matching styling'

echo '+++++++++++++++++++++++++++++++'
echo '+++++++++++++++++++++++++++++++'
